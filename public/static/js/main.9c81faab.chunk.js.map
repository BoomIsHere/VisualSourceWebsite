{"version":3,"sources":["redux/reducers.js","redux/constants.js","components/Create/index.js","contaner/App/App.js","redux/actions.js","serviceWorker.js","index.js"],"names":["intialLoadingState","isPending","error","models","config","rootReducer","combineReducers","gameLoading","state","arguments","length","undefined","action","type","Object","assign","payload","CREATE","_this","this","classCallCheck","Cloud","_ref","x","y","z","cloud","mesh","Mesh","geometry","material","name","userData","faction","position","set","Water","_ref2","water","Field","_ref3","field","attached","Ocean","_ref4","ocean","Fruit","_ref5","fruit","App","possibleConstructorReturn","getPrototypeOf","call","createBlock","create","props","scene","add","i","row","colum","posZ","posX","handleResize","e","renderer","setSize","window","innerWidth","innerHeight","camera","aspect","updateProjectionMatrix","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","renderScene","delta","clock","getDelta","cameraControls","update","render","width","height","addEventListener","updateCamera","THREE","loadGameAssets","CameraControls","install","antialias","shadowMap","enabled","setClearColor","raycaster","rotation","domElement","mount","appendChild","directionalLight","setY","hemisphereLight","console","log","removeChild","_this2","react_default","a","createElement","id","ref","Component","connect","dispatch","manager","LoadingManager","onStart","onLoad","onError","err","onProgress","url","itemsLoaded","itemsTotal","concat","configLoader","FileLoader","setPath","setResponseType","load","json","push","mtlLoader","MTLLoader","materials","preload","OBJLoader","setMaterials","object","children","Boolean","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","es","contaner_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c81faab.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport {  GAME_LOADING_PENDING,GAME_LOADING_ERROR,GAME_LOADING_FINISH} from './constants';\r\n\r\nconst intialLoadingState = {\r\n    isPending: false,\r\n    error: \"\",\r\n    models: {},\r\n    config: []\r\n}\r\n\r\nexport const gameLoading = (state=intialLoadingState, action={})=>{\r\n    switch (action.type) {\r\n        case GAME_LOADING_ERROR:\r\n            return Object.assign({},state,{error: action.payload, isPending: false});\r\n        case GAME_LOADING_PENDING:\r\n\r\n            return Object.assign({},state,{isPending: true});\r\n        case GAME_LOADING_FINISH:\r\n            return Object.assign({},state,{isPending: false, models: action.payload.models, config: action.payload.config})\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({gameLoading});\r\n","export const GAME_LOADING_PENDING = 'GAME_LOADING_PENDING';\r\nexport const GAME_LOADING_ERROR = 'GAME_LOADING_ERROR';\r\nexport const GAME_LOADING_FINISH = 'GAME_LOADING_FINISH';","import { Mesh } from 'three';\r\nexport default class CREATE {\r\n    constructor(models){\r\n        this.models = models;\r\n    }\r\n\r\n\r\n    Cloud = ({x, y, z}) =>{\r\n        const { cloud } = this.models;\r\n        let mesh = new Mesh(cloud.geometry, cloud.material);\r\n        mesh.name = \"cloud\"\r\n        mesh.userData = {\r\n          type: \"cloud\",\r\n          faction : 'none'\r\n        }\r\n        mesh.position.set(x,y,z)\r\n        return mesh;\r\n      }\r\n      Water = ({x, y, z}, faction = null) =>{\r\n        const { water } = this.models;\r\n        let mesh = new Mesh(water.geometry, water.material);\r\n        mesh.name = \"water\"\r\n        mesh.userData = {\r\n          type: \"water\",\r\n          faction : faction\r\n        }\r\n        mesh.position.set(x,y,z)\r\n        return mesh;\r\n      }\r\n      Field = ({x, y, z}, faction = null) =>{\r\n        const { field } = this.models;\r\n        let mesh = new Mesh(field.geometry, field.material);\r\n        mesh.name = \"base_field\"\r\n        mesh.userData = {\r\n          type:\"field\",\r\n          faction : faction,\r\n          attached: []\r\n        }\r\n        mesh.position.set(x,y,z)\r\n        return mesh;\r\n      }\r\n      Ocean = ({x, y, z}, faction = null) =>{\r\n        const { ocean } = this.models;\r\n        let mesh = new Mesh(ocean.geometry, ocean.material);\r\n        mesh.name = \"ocean\"\r\n        mesh.userData = {\r\n          type:\"ocean\",\r\n          faction : faction\r\n        }\r\n        mesh.position.set(x,y,z)\r\n        return mesh;\r\n      }\r\n      \r\n    Fruit = ({x, y, z},faction) =>{\r\n        const { fruit } = this.models;\r\n        let mesh = new Mesh(fruit.geometry, fruit.material);\r\n        mesh.name = \"fruit\"\r\n        mesh.userData = {\r\n          type:\"fruit\",\r\n          faction : faction\r\n        }\r\n        mesh.position.set(x,y,z)\r\n        return mesh;\r\n      }\r\n}\r\n","import React, {Component} from 'react';\r\nimport * as THREE from 'three';\r\nimport {connect} from 'react-redux';\r\nimport CameraControls from 'camera-controls';\r\nimport {loadingGameContent} from '../../redux/actions'\r\nimport CREATE from '../../components/Create/index';\r\nimport Loader from '../../components/Loader/Loader'\r\nimport './App.css';\r\n\r\nconst mapStateToProps = state => {return {\r\n  error: state.gameLoading.error,\r\n  isPending: state.gameLoading.isPending,\r\n  models: state.gameLoading.models,\r\n  config: state.gameLoading.config\r\n}};\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n     loadGameAssets: ()=>dispatch(loadingGameContent())\r\n  }\r\n}\r\n\r\n\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight\r\n    }\r\n   \r\n  }\r\n\r\n \r\n\r\n  componentDidMount(){\r\n   window.addEventListener('keydown',this.updateCamera)\r\n    \r\n   \r\n   this.scene = new THREE.Scene();\r\n   this.props.loadGameAssets();\r\n   CameraControls.install( { THREE: THREE } );\r\n\r\n   this.renderer = new THREE.WebGLRenderer({antialias: true});\r\n   this.renderer.shadowMap.enabled = true;\r\n   this.renderer.setClearColor('#000000');\r\n   this.renderer.setSize(this.state.width,this.state.height);\r\n\r\n   this.raycaster = new THREE.Raycaster();\r\n   this.camera = new THREE.PerspectiveCamera(75,this.state.width/this.state.height,0.1,1000);\r\n   this.camera.rotation.set(0,0,0);\r\n   this.camera.position.set(1,1,1);\r\n\r\n   this.clock = new THREE.Clock();\r\n   this.cameraControls = new CameraControls( this.camera, this.renderer.domElement );\r\n\r\n\r\n   this.mount.appendChild(this.renderer.domElement);\r\n   window.addEventListener('resize',this.handleResize);\r\n\r\n   const directionalLight = new THREE.DirectionalLight();\r\n   directionalLight.position.setY(200);\r\n   this.scene.add(directionalLight);\r\n  \r\n   const hemisphereLight = new THREE.HemisphereLight();\r\n   this.scene.add(hemisphereLight);\r\n   this.start()\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(!this.props.isPending){\r\n      \r\n        console.log(\"Assets Load\")\r\n        console.log(this.props)\r\n        this.createBlock()\r\n    }\r\n  }\r\n\r\n  createBlock = () =>{\r\n    const create = new CREATE(this.props.models);\r\n    this.scene.add(create.Fruit({x:2.5,y:0,z:2.5},\"xni-xi\"))\r\n    this.scene.add(create.Fruit({x:3.5,y:0,z:5},\"xni-xi\"))\r\n    this.scene.add(create.Fruit({x:.5,y:0,z:1},\"xni-xi\"))\r\n    this.scene.add(create.Water({x:-0.5,y:0,z:0},\"xni-xi\"))\r\n    this.scene.add(create.Water({x:-0.5,y:0,z:.5},\"xni-xi\"))\r\n    this.scene.add(create.Water({x:-0.5,y:0,z:1},\"xni-xi\"))\r\n    this.scene.add(create.Ocean({x:-1,y:0,z:0},\"xni-xi\"))\r\n    this.scene.add(create.Ocean({x:-1,y:0,z:.5},\"xni-xi\"))\r\n    this.scene.add(create.Ocean({x:-1,y:0,z:1},\"xni-xi\"))\r\n    this.scene.add(create.Cloud({x:5,y:0,z:5},\"xni-xi\"))\r\n    this.scene.add(create.Cloud({x:5,y:0,z:5.5},\"xni-xi\"))\r\n\r\n   let size = 121\r\n   let i = 0;\r\n   let row = 0;\r\n   let colum = 0;\r\n   let posZ = 0;\r\n   let posX = 0;\r\n   while(i <= size){\r\n    line : while(row <= 11){\r\n      this.scene.add(create.Field({x:posX,y:0,z:posZ},\"xni-xi\"))\r\n      row++ \r\n      posZ += 0.5;\r\n      if(row > 11){\r\n        colum++\r\n        if(colum < 11){\r\n          row = 0;\r\n          posZ = 0;\r\n          posX += 0.5;\r\n        }\r\n      }\r\n    }\r\n    i++\r\n  }\r\n\r\n\r\n  }\r\n\r\n \r\n\r\n  componentWillUnmount(){\r\n    this.stop();\r\n    this.mount.removeChild(this.renderer.domElement);\r\n  }\r\n\r\n  handleResize = (e) => {\r\n    this.renderer.setSize(window.innerWidth,window.innerHeight);\r\n    this.camera.aspect = window.innerWidth/window.innerHeight;\r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n  start = () => {\r\n    if(!this.frameId){\r\n      this.frameId = requestAnimationFrame(this.animate)\r\n    }\r\n  } \r\n  stop = () =>{\r\n    cancelAnimationFrame(this.frameId);\r\n  }\r\n  animate = () =>{\r\n    this.renderScene();\r\n    this.frameId = window.requestAnimationFrame(this.animate);\r\n  }\r\n  renderScene = () => {\r\n    const delta = this.clock.getDelta();\r\n    const hasControlsUpdated = this.cameraControls.update( delta );\r\n    this.renderer.render(this.scene,this.camera);\r\n }\r\n  \r\n  render(){ \r\n  \r\n    return (\r\n    <div id=\"three-scene\" ref={mount => {this.mount = mount}}></div>\r\n    );\r\n    }\r\n  \r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n\r\n\r\n/*\r\ncreateWorld = size => {\r\n    const random = new Random();\r\n    const sand = new THREE.MeshStandardMaterial({metalness: 0.0, map: this.sandTexture, aoMap: this.aoSandTexture, normalMap: this.normalSandTexture, roughnessMap: this.roughnessSandTexture, envMap: this.heightSandTexture});\r\n    const stone = new THREE.MeshStandardMaterial({metalness: 0.0, map: this.stoneTexture, aoMap: this.aoStoneTexture, normalMap: this.normalStoneTexture, roughnessMap: this.roughnessStoneTexture, envMap: this.heightStoneTexture});\r\n    const materialList = [sand, stone ]\r\n    let posZ = 0;\r\n    let posX = 0;\r\n    let i = 0;\r\n    let row = 0;\r\n    let colum = 0;\r\n    const geometryF = new THREE.TetrahedronGeometry(.5,0);\r\n    const cubes = new THREE.Mesh(geometryF,stone);\r\n    cubes.position.setY(.5);\r\n      while(i <= size){\r\n        const geometry = new THREE.BoxGeometry(.5,.5,.5);\r\n        line : while(row <= 11){\r\n          let cube = new THREE.Mesh(geometry, random.pick(materialList));\r\n          cube.position.set(posX,0,posZ);\r\n          cube.rotation.set(0,0,0);\r\n          const list = [cube ,cube.attach(cubes)]\r\n          this.scene.add(random.pick(list));\r\n          row++ \r\n          posZ += 0.5;\r\n          if(row > 11){\r\n            colum++\r\n            if(colum < 11){\r\n              row = 0;\r\n              posZ = 0;\r\n              posX += 0.5;\r\n            }\r\n          }\r\n        }\r\n        \r\n        i++\r\n      }\r\n  } */","import {GAME_LOADING_FINISH,GAME_LOADING_PENDING, GAME_LOADING_ERROR} from './constants';\r\nimport {LoadingManager, FileLoader} from 'three';\r\nimport {MTLLoader, OBJLoader} from 'three-obj-mtl-loader'\r\n\r\n\r\n\r\nexport const loadingGameContent = () => dispatch =>{\r\n    let models = {},config = []\r\n    const manager = new LoadingManager();\r\n    manager.onStart =  () =>{ dispatch({type: GAME_LOADING_PENDING}); };\r\n    manager.onLoad =  ( ) => {  dispatch({type: GAME_LOADING_FINISH, payload: { models, config }    });};\r\n    manager.onError = err => { dispatch({type: GAME_LOADING_ERROR, payload: err});};\r\n    manager.onProgress =  ( url, itemsLoaded, itemsTotal ) => { console.log( `Loading file: ${url} .\\nLoaded ${itemsLoaded} of ${itemsTotal} files.` ); };\r\n    \r\n    const configLoader = new FileLoader(manager).setPath('./config/').setResponseType('json');\r\n   \r\n    configLoader.load('block_config.json', json=>{\r\n         config.push(json);\r\n    });\r\n    configLoader.load('mods.json',json=>{\r\n        config.push(json);\r\n    })\r\n    const mtlLoader = new MTLLoader(manager).setPath('./modals/');\r\n    \r\n      mtlLoader.load('field.mtl',materials=>{\r\n        materials.preload();\r\n        const objLoader = new OBJLoader(manager).setPath('./modals/').setMaterials(materials);\r\n        objLoader.load('field.obj',object=>{\r\n         models.field = {\r\n           geometry: object.children[0].geometry,\r\n           material: object.children[0].material\r\n         }\r\n        });\r\n      });\r\n\r\n      mtlLoader.load('cloud.mtl',materials=>{\r\n        materials.preload();\r\n        const objLoader = new OBJLoader(manager).setPath('./modals/').setMaterials(materials)\r\n        objLoader.load('cloud.obj',object=>{\r\n         models.cloud = {\r\n           geometry: object.children[0].geometry,\r\n           material: object.children[0].material\r\n         }\r\n        });\r\n      });\r\n\r\n      mtlLoader.load('water.mtl',materials=>{\r\n        materials.preload();\r\n        const objLoader = new OBJLoader(manager).setPath('./modals/').setMaterials(materials)\r\n        objLoader.load('water.obj',object=>{\r\n         models.water = {\r\n           geometry: object.children[0].geometry,\r\n           material: object.children[0].material\r\n         }\r\n        });\r\n      });\r\n\r\n      mtlLoader.load('ocean.mtl',materials=>{\r\n        materials.preload();\r\n        const objLoader = new OBJLoader(manager).setPath('./modals/').setMaterials(materials)\r\n        objLoader.load('ocean.obj',object=>{\r\n         models.ocean = {\r\n           geometry: object.children[0].geometry,\r\n           material: object.children[0].material\r\n         }\r\n        });\r\n      });\r\n      mtlLoader.load('fruit_t_one.mtl',materials=>{\r\n        materials.preload();\r\n        const objLoader = new OBJLoader(manager).setPath('./modals/').setMaterials(materials)\r\n        objLoader.load('fruit_t_one.obj',object=>{\r\n         models.fruit = {\r\n           geometry: object.children[0].geometry,\r\n           material: object.children[0].material\r\n         }\r\n        });\r\n      });\r\n\r\n   \r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk'\nimport {rootReducer} from './redux/reducers'\nimport App from './contaner/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)));\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\nserviceWorker.unregister();\n"],"sourceRoot":""}