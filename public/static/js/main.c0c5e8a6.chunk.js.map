{"version":3,"sources":["images/cube.svg","redux/reducers.js","redux/constants.js","components/Create/index.js","components/WorldGeneration/WorldGeneration_v2.js","components/BlockUI/BlockUI.js","contaner/App/App.js","redux/actions.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","intialLoadingState","isPending","error","models","config","worldLoadingintial","isLoading","gameUIintial","ui","rootReducer","combineReducers","gameLoading","state","arguments","length","undefined","action","type","Object","assign","payload","worldLoading","uiUpdate","CREATE","_this","this","classCallCheck","Cloud","_ref","x","y","z","cloud","mesh","Mesh","geometry","material","name","userData","faction","position","set","Water","_ref2","water","attached","build","Field","_ref3","field","addEventListener","ev","console","log","Ocean","_ref4","ocean","Fruit","_ref5","fruit","Slector","user","slector","WorldGeneration_V2","createWorldSeed","height","width","value","nx","ny","noise","genWorld","_this$config","worldSize","factions","worldSeedArray","worldArray","coordZ","coordX","row","colum","forEach","array","int","push","intToBlock","addToWorld","i","scene","add","addToScene","item","deleteWorld","children","dispose","genNoise","SimplexNoise","noise2D","BlockUI","buildBlocks","update","react_default","a","createElement","className","src","TestCube","alt","onClick","map","element","key","concat","App","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","renderScene","window","delta","clock","getDelta","cameraControls","renderer","render","camera","composer","createWorld","props","changeWorldState","handleResize","e","setSize","innerWidth","innerHeight","setPixelRatio","devicePixelRatio","aspect","updateProjectionMatrix","blockClicked","mouse3D","THREE","clientX","clientY","unproject","raycaster","sub","normalize","intersects","intersectObjects","userSlector","find","data","object","clicked","updateUI","components_BlockUI_BlockUI","loadGameAssets","CameraControls","install","antialias","EffectComposer","shadowMap","enabled","autoClear","setClearColor","rotation","domElement","mount","appendChild","directionalLight","setY","hemisphereLight","removeChild","_this2","id","ref","Component","connect","dispatch","manager","LoadingManager","onStart","onLoad","onError","err","onProgress","url","itemsLoaded","itemsTotal","configLoader","FileLoader","setPath","setResponseType","load","json","mtlLoader","MTLLoader","materials","preload","OBJLoader","setMaterials","toLowercase","Boolean","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","es","contaner_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0c5e8a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cube.4b2be875.svg\";","import { combineReducers } from 'redux';\r\nimport {  GAME_LOADING_PENDING,GAME_LOADING_ERROR,GAME_LOADING_FINISH, WORLD_LOADING_ERROR, WORLD_LOADING_FINISH, WORLD_LOADING_PENDING, UI_BLOCK_TYPE} from './constants';\r\n\r\nconst intialLoadingState = {\r\n    isPending: false,\r\n    error: \"\",\r\n    models: {},\r\n    config: []\r\n}\r\n\r\nconst worldLoadingintial = {\r\n    isLoading: false,\r\n    error: \"\"\r\n}\r\n\r\nconst gameUIintial = {\r\n    ui: null\r\n}\r\n\r\nexport const uiUpdate = (state=gameUIintial,action={})=>{\r\n    switch (action.type) {\r\n        case UI_BLOCK_TYPE: \r\n            return Object.assign({},state,{ui: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const worldLoading = (state=worldLoadingintial, action={})=>{\r\n    switch (action.type) {\r\n        case WORLD_LOADING_ERROR:\r\n            return Object.assign({},state,{error: action.payload, isLoading: false});\r\n            case WORLD_LOADING_PENDING:\r\n                return Object.assign({},state,{isLoading: true});\r\n            case WORLD_LOADING_FINISH:\r\n                return Object.assign({},state,{isLoading: false})\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const gameLoading = (state=intialLoadingState, action={})=>{\r\n    switch (action.type) {\r\n        case GAME_LOADING_ERROR:\r\n            return Object.assign({},state,{error: action.payload, isPending: false});\r\n        case GAME_LOADING_PENDING:\r\n\r\n            return Object.assign({},state,{isPending: true});\r\n        case GAME_LOADING_FINISH:\r\n            return Object.assign({},state,{isPending: false, models: action.payload.models, config: action.payload.config})\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({gameLoading, worldLoading, uiUpdate});\r\n","export const GAME_LOADING_PENDING = 'GAME_LOADING_PENDING';\r\nexport const GAME_LOADING_ERROR = 'GAME_LOADING_ERROR';\r\nexport const GAME_LOADING_FINISH = 'GAME_LOADING_FINISH';\r\nexport const WORLD_LOADING_FINISH = \"WORLD_LOADING_FINISH\";\r\nexport const WORLD_LOADING_ERROR = \"WORLD_LOADING_ERROR\";\r\nexport const WORLD_LOADING_PENDING = \"WORLD_LOADING_PENDING\";\r\nexport const UI_BLOCK_TYPE = \"UI_BLOCK_TYPE\";","import { Mesh } from 'three';\r\n\r\nexport default class CREATE {\r\n    constructor(models){\r\n        this.models = models;\r\n    }\r\n\r\n\r\n    Cloud = ({x, y, z}) =>{\r\n        const { cloud } = this.models;\r\n        let mesh = new Mesh(cloud.geometry, cloud.material);\r\n        mesh.name = \"cloud\"\r\n        mesh.userData = {\r\n          type: \"Cloud\",\r\n          faction : 'none'\r\n        }\r\n        mesh.position.set(x,y,z)\r\n        return mesh;\r\n      }\r\n      Water = ({x, y, z}, faction = null) =>{\r\n        const { water } = this.models;\r\n        let mesh = new Mesh(water.geometry, water.material);\r\n        mesh.name = \"water\"\r\n        mesh.userData = {\r\n          type: \"Water\",\r\n          faction : faction,\r\n          attached: [],\r\n          build:[\"Port\",\"Water Temple\"]\r\n        }\r\n        mesh.position.set(x,y,z)\r\n        return mesh;\r\n      }\r\n      Field = ({x, y, z}, faction = null) =>{\r\n        const { field } = this.models;\r\n        let mesh = new Mesh(field.geometry, field.material);\r\n        mesh.addEventListener(\"click\",function(ev){console.log(\"You clicked a Field Block\")})\r\n        mesh.name = \"base_field\"\r\n        mesh.userData = {\r\n          type:\"Field\",\r\n          faction : faction,\r\n          attached: [],\r\n          build: [\"Road\",\"Farm\",\"Sawmill\",\"GrowForest\"]\r\n        }\r\n        mesh.position.set(x,y,z)\r\n        return mesh;\r\n      }\r\n      Ocean = ({x, y, z}, faction = null) =>{\r\n        const { ocean } = this.models;\r\n        let mesh = new Mesh(ocean.geometry, ocean.material);\r\n        mesh.name = \"ocean\"\r\n        mesh.userData = {\r\n          type:\"Ocean\",\r\n          faction : faction,\r\n          attached: [],\r\n          build: [\"Water Temple\"]\r\n        }\r\n        mesh.position.set(x,y,z)\r\n        return mesh;\r\n      }\r\n      \r\n    Fruit = ({x, y, z},faction) =>{\r\n        const { fruit } = this.models;\r\n        let mesh = new Mesh(fruit.geometry, fruit.material);\r\n        mesh.name = \"fruit_typeOne\"\r\n        mesh.userData = {\r\n          type:\"Fruit\",\r\n          faction : faction\r\n        }\r\n        mesh.position.set(x,y,z)\r\n        return mesh;\r\n      }\r\n    Slector = (user,y) =>{\r\n      const {slector} = this.models;\r\n      let mesh = new Mesh(slector.geometry,slector.material);\r\n      mesh.name=\"slector\";\r\n      mesh.userData={\r\n        type:\"Slector\",\r\n        user:user\r\n      }\r\n      mesh.position.set(0,y,0);\r\n      return mesh;\r\n    }\r\n    }\r\n","import SimplexNoise from 'simplex-noise';\r\nimport CREATE from '../Create/index';\r\n\r\n/**\r\n * Credit \r\n *   https://www.redblobgames.com/maps/terrain-from-noise/\r\n * \r\n * \r\n * \r\n * \r\n * \r\n */\r\nexport default class WorldGeneration_V2 {\r\n    constructor(config){\r\n        this.config = config;\r\n        this.models = new CREATE(config.models);\r\n        this.genNoise = new SimplexNoise();\r\n    }\r\n    \r\n    noise(nx, ny) {\r\n        return this.genNoise.noise2D(nx, ny) / 2 + 0.5;  // Rescale from -1.0:+1.0 to 0.0:1.0\r\n    }\r\n\r\n    createWorldSeed = (height,width)=>{\r\n        let value = [];   \r\n        for (let y = 0; y < height; y++) {\r\n          value[y] = [];\r\n          for (let x = 0; x < width; x++) {      \r\n            let nx = x/width - 0.5, ny = y/height - 0.5;\r\n            value[y][x] = this.noise(nx, ny);\r\n          }\r\n        }\r\n        return value;\r\n      }\r\n\r\n    genWorld = () =>{\r\n        const {Slector} = this.models;\r\n        const {worldSize,factions} = this.config;\r\n        this.worldSeedArray = [];\r\n        this.worldArray = [];\r\n        this.coordZ = 0;\r\n        this.coordX = 0;\r\n        this.row = 0;\r\n        this.colum = 0;\r\n        let seed = this.createWorldSeed(worldSize, worldSize);\r\n       \r\n        seed.forEach(array=>{\r\n            array.forEach(int=>{\r\n               this.worldSeedArray.push(this.intToBlock(int));\r\n            });\r\n        });\r\n        this.worldSeedArray.forEach(type=>{\r\n            this.addToWorld(type,this.models);\r\n            this.row++\r\n            this.coordZ += 0.5;\r\n            if(this.row > (worldSize-1)){\r\n                this.colum++\r\n                if(this.colum < worldSize){\r\n                 this.row = 0;\r\n                 this.coordZ = 0;\r\n                 this.coordX += 0.5;\r\n                }\r\n            }\r\n        })\r\n\r\n\r\n           // add Slector Boxs\r\n           for(let i = 0; i < factions.length; i++){\r\n             this.config.scene.add(Slector(factions[i],-(i+1)));\r\n           }\r\n           \r\n           this.addToScene(this.worldArray)\r\n           console.log(this.config.scene)\r\n       }\r\n\r\n       addToWorld = (type,{Field,Ocean,Water}) =>{\r\n        switch (type) {\r\n            case \"OCEAN\":\r\n                this.worldArray.push(Ocean({x:this.coordX,y:0,z:this.coordZ},null));\r\n               return;\r\n            case \"FIELD\":\r\n                this.worldArray.push(Field({x:this.coordX,y:0,z:this.coordZ},null));\r\n                return;\r\n            case \"WATER\":\r\n                this.worldArray.push(Water({x:this.coordX,y:0,z:this.coordZ},null));\r\n                return;\r\n            default:\r\n                return;\r\n        }\r\n       }\r\n   \r\n       addToScene = array =>{\r\n        array.forEach(item=>{\r\n          this.config.scene.add(item);\r\n        });\r\n      }\r\n\r\n      intToBlock = int =>{\r\n         if(int <= 0.3){\r\n             return \"OCEAN\"\r\n         }else if(int < 0.6 && int > 0.3){\r\n            return \"WATER\"\r\n         }else{\r\n             return \"FIELD\"\r\n         }\r\n      }\r\n\r\n      deleteWorld = (worldSize) => {\r\n         \r\n          for(let i = 2; i >= (worldSize+2); i++ ){\r\n            this.config.scene.children[i].mesh.geometry.dispose();\r\n            delete this.config.scene.children[i];\r\n          }\r\n      }\r\n\r\n}\r\n","import React from 'react';\r\nimport TestCube from '../../images/cube.svg'\r\nimport './BlockUI.css';\r\n\r\nconst BlockUI = ({name, buildBlocks,update}) => {\r\n  return (<div className=\"blockUI-root\">\r\n              <ul className=\"blockUI-data\">\r\n                <li className=\"block-UI\">\r\n                  <img src={TestCube} alt=\"ImageIcon\"/></li>\r\n                <li className=\"block-UI\"><p>{name}</p></li>\r\n                <li><button onClick={()=>{update(null)}}>^</button></li>\r\n              </ul>\r\n              <div className=\"blockUI-build\">\r\n                {buildBlocks.map(element => {\r\n                  return (<div className=\"block-buildRoot\" key={`Field_${element}`} onClick={()=>{console.log(element)}}>\r\n                            <div>\r\n                              <p><span>✯</span>5</p>\r\n                              <img src={TestCube} alt=\"\"/>\r\n                            </div>\r\n                            <p>{element}</p>\r\n                          </div>)\r\n                })}\r\n              </div>\r\n            </div>);\r\n}\r\n\r\nexport default BlockUI;","import React, {Component} from 'react';\r\nimport * as THREE from 'three';\r\nimport {connect} from 'react-redux';\r\nimport CameraControls from 'camera-controls';\r\nimport { BloomEffect, EffectComposer, EffectPass, RenderPass } from \"postprocessing\";\r\nimport {loadingGameContent,  worldLoading,uiUpdate} from '../../redux/actions'\r\nimport WorldGeneration_V2 from '../../components/WorldGeneration/WorldGeneration_v2'\r\nimport BlockUI from '../../components/BlockUI/BlockUI';\r\nimport './App.css';\r\n\r\nconst mapStateToProps = state => {return {\r\n  error: state.gameLoading.error,\r\n  isPending: state.gameLoading.isPending,\r\n  models: state.gameLoading.models,\r\n  config: state.gameLoading.config,\r\n  isLoading: state.worldLoading.isLoading,\r\n  ui: state.uiUpdate.ui\r\n}};\r\nconst mapDispatchToProps = dispatch =>{\r\n  return {\r\n     loadGameAssets: ()=>dispatch(loadingGameContent()),\r\n     changeWorldState:()=>dispatch(worldLoading()),\r\n     updateUI: element=>dispatch(uiUpdate(element))\r\n  }\r\n}\r\n\r\n\r\nclass App extends Component{\r\n  componentDidMount(){\r\n    \r\n    // THREE Scene\r\n   this.scene = new THREE.Scene();\r\n   this.props.loadGameAssets();\r\n   CameraControls.install( { THREE: THREE } );\r\n\r\n  // renderer and Postprossing \r\n   this.renderer = new THREE.WebGLRenderer({antialias: true});\r\n   this.composer = new EffectComposer(this.renderer);\r\n   this.renderer.shadowMap.enabled = true;\r\n   this.renderer.autoClear = false\r\n   this.renderer.setClearColor('#000000');\r\n   this.renderer.setSize(window.innerWidth,window.innerHeight);\r\n   this.renderer.setPixelRatio( window.devicePixelRatio );\r\n\r\n   // click methods\r\n   this.raycaster = new THREE.Raycaster();\r\n   // use orthographic Camera?\r\n   this.camera = new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,0.1,1000);\r\n   this.camera.rotation.set(0,0,0);\r\n   this.camera.position.set(1,1,1);\r\n  \r\n\r\n  \r\n   //this.composer.addPass(new RenderPass(this.scene,this.camera));\r\n \r\n   this.clock = new THREE.Clock();\r\n   this.cameraControls = new CameraControls( this.camera, this.renderer.domElement );\r\n\r\n   this.mount.appendChild(this.renderer.domElement);\r\n   window.addEventListener('resize',this.handleResize);\r\n   window.addEventListener('click',this.blockClicked)\r\n   window.addEventListener('keydown',this.createWorld)\r\n   const directionalLight = new THREE.DirectionalLight();\r\n   directionalLight.position.setY(200);\r\n   this.scene.add(directionalLight);\r\n  \r\n   const hemisphereLight = new THREE.HemisphereLight();\r\n   this.scene.add(hemisphereLight);\r\n   this.start()\r\n  }\r\n\r\n  componentDidUpdate(){\r\n  }\r\n  componentWillUnmount(){\r\n    this.stop();\r\n    this.mount.removeChild(this.renderer.domElement);\r\n  }\r\n  start = () => {\r\n    if(!this.frameId){\r\n      this.frameId = requestAnimationFrame(this.animate)\r\n    }\r\n  } \r\n  stop = () =>{\r\n    cancelAnimationFrame(this.frameId);\r\n  }\r\n  animate = () =>{\r\n    this.renderScene();\r\n    this.frameId = window.requestAnimationFrame(this.animate);\r\n  }\r\n  renderScene = () => {\r\n    const delta = this.clock.getDelta();\r\n    const hasControlsUpdated = this.cameraControls.update( delta );\r\n    this.renderer.render(this.scene,this.camera);\r\n    this.composer.render(delta);\r\n  }\r\n  \r\n  createWorld = () =>{\r\n    if(!this.props.isPending){\r\n      const world_v2 = new WorldGeneration_V2({\r\n                                            config: this.props.config,\r\n                                            models: this.props.models,\r\n                                            scene: this.scene,\r\n                                            worldSize: 11,\r\n                                            factions: [\"Xin-xi\",\"Imperius\"],\r\n                                            state: [this.props.changeWorldState]\r\n                                              });\r\n      world_v2.genWorld();\r\n  }\r\n }\r\n\r\n \r\n\r\n  // window Listeners\r\n  handleResize = (e) => {\r\n    this.renderer.setSize(window.innerWidth,window.innerHeight);\r\n    this.renderer.setPixelRatio( window.devicePixelRatio );\r\n    this.camera.aspect = window.innerWidth/window.innerHeight;\r\n    this.camera.updateProjectionMatrix();\r\n  }\r\n  blockClicked = ev =>{\r\n    const mouse3D = new THREE.Vector3((ev.clientX/window.innerWidth)*2-1,-(ev.clientY/window.innerHeight)*2+1,0.5);\r\n    mouse3D.unproject(this.camera);\r\n    this.raycaster.set(this.camera.position,mouse3D.sub(this.camera.position).normalize());\r\n    const intersects = this.raycaster.intersectObjects(this.scene.children);\r\n    const userSlector  = this.scene.children.find(item=>{\r\n       return item.userData.user === \"Imperius\"//this will be a redux State\r\n    });\r\n    \r\n    if(intersects.length > 0){\r\n    const data = intersects[0].object;\r\n    const clicked = data.position;\r\n    userSlector.position.set(clicked.x,clicked.y,clicked.z);\r\n        this.props.updateUI(<BlockUI update={this.props.updateUI} name={data.userData.type} buildBlocks={data.userData.build}/>);\r\n    }else{\r\n      userSlector.position.set(0,-1,0);\r\n      this.props.updateUI(null);\r\n    }\r\n  \r\n  }\r\n\r\n  render(){ \r\n    return (\r\n       <div id=\"three-scene\" ref={mount => {this.mount = mount}}>\r\n         {this.props.ui}\r\n       </div>\r\n    );\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n\r\n\r\n\r\n","import {GAME_LOADING_FINISH,GAME_LOADING_PENDING, GAME_LOADING_ERROR, WORLD_LOADING_ERROR, WORLD_LOADING_FINISH, WORLD_LOADING_PENDING, UI_BLOCK_TYPE} from './constants';\r\nimport {LoadingManager, FileLoader} from 'three';\r\nimport {MTLLoader, OBJLoader} from 'three-obj-mtl-loader'\r\n\r\n\r\nexport const uiUpdate = (element) => dispatch =>{\r\n  dispatch({type: UI_BLOCK_TYPE, payload: element});\r\n}\r\n\r\nexport const worldLoading = (state,error) => dispatch =>{\r\n  switch (state.toLowercase()) {\r\n    case \"loading\":\r\n      dispatch({type: WORLD_LOADING_PENDING});\r\n      break;\r\n    case \"error\": \r\n      dispatch({type: WORLD_LOADING_ERROR, payload: error});\r\n      break;\r\n    case \"finish\": \r\n      dispatch({type: WORLD_LOADING_FINISH});\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n}\r\n\r\nexport const loadingGameContent = () => dispatch =>{\r\n    let models = {},config = [], modelPath = \"./models/\"\r\n    const manager = new LoadingManager();\r\n    manager.onStart =  () =>{ dispatch({type: GAME_LOADING_PENDING}); };\r\n    manager.onLoad =  ( ) => {  dispatch({type: GAME_LOADING_FINISH, payload: { models, config }    });};\r\n    manager.onError = err => { dispatch({type: GAME_LOADING_ERROR, payload: err});};\r\n    manager.onProgress =  ( url, itemsLoaded, itemsTotal ) => { console.log( `Loading file: ${url} .\\n Loaded ${itemsLoaded} of ${itemsTotal} files.` ); };\r\n    \r\n    const configLoader = new FileLoader(manager).setPath('./config/').setResponseType('json');\r\n   \r\n    configLoader.load('config.json', json=>{\r\n         config.push(json);\r\n    });\r\n    configLoader.load('mods.json',json=>{\r\n        config.push(json);\r\n    })\r\n    const mtlLoader = new MTLLoader(manager).setPath(modelPath);\r\n    \r\n      mtlLoader.load('field.mtl',materials=>{\r\n        materials.preload();\r\n        const objLoader = new OBJLoader(manager).setPath(modelPath).setMaterials(materials);\r\n        objLoader.load('field.obj',object=>{\r\n         models.field = {\r\n           geometry: object.children[0].geometry,\r\n           material: object.children[0].material\r\n         }\r\n        });\r\n      });\r\n\r\n      mtlLoader.load('cloud.mtl',materials=>{\r\n        materials.preload();\r\n        const objLoader = new OBJLoader(manager).setPath(modelPath).setMaterials(materials)\r\n        objLoader.load('cloud.obj',object=>{\r\n         models.cloud = {\r\n           geometry: object.children[0].geometry,\r\n           material: object.children[0].material\r\n         }\r\n        });\r\n      });\r\n\r\n      mtlLoader.load('water.mtl',materials=>{\r\n        materials.preload();\r\n        const objLoader = new OBJLoader(manager).setPath(modelPath).setMaterials(materials)\r\n        objLoader.load('water.obj',object=>{\r\n         models.water = {\r\n           geometry: object.children[0].geometry,\r\n           material: object.children[0].material\r\n         }\r\n        });\r\n      });\r\n\r\n      mtlLoader.load('slector.mtl',materials=>{\r\n        materials.preload();\r\n        const objLoader = new OBJLoader(manager).setPath(modelPath).setMaterials(materials)\r\n        objLoader.load('slector.obj',object=>{\r\n         models.slector = {\r\n           geometry: object.children[0].geometry,\r\n           material: object.children[0].material\r\n         }\r\n        });\r\n      });\r\n\r\n      mtlLoader.load('ocean.mtl',materials=>{\r\n        materials.preload();\r\n        const objLoader = new OBJLoader(manager).setPath(modelPath).setMaterials(materials)\r\n        objLoader.load('ocean.obj',object=>{\r\n         models.ocean = {\r\n           geometry: object.children[0].geometry,\r\n           material: object.children[0].material\r\n         }\r\n        });\r\n      });\r\n      mtlLoader.load('fruit_t_one.mtl',materials=>{\r\n        materials.preload();\r\n        const objLoader = new OBJLoader(manager).setPath(modelPath).setMaterials(materials)\r\n        objLoader.load('fruit_t_one.obj',object=>{\r\n         models.fruit = {\r\n           geometry: object.children[0].geometry,\r\n           material: object.children[0].material\r\n         }\r\n        });\r\n      });\r\n\r\n   \r\n}\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware,compose} from 'redux';\nimport thunk from 'redux-thunk'\nimport {rootReducer} from './redux/reducers'\nimport App from './contaner/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)));\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\nserviceWorker.unregister();\n"],"sourceRoot":""}